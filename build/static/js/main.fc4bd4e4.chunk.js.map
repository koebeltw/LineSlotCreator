{"version":3,"sources":["common/actionTypes.js","actions/index.js","reducers/WSMessageReducer.js","reducers/WSConnetReducer.js","reducers/HomeReducer.js","reducers/SettingReducer.js","reducers/RunDataReducer.js","reducers/PlayOnceDataReducer.js","sagas/websocketSaga.js","reducers/index.js","rootSaga.js","store.js","components/SettingComponent.js","components/RunDataComponent.js","components/PlayOnceComponent.js","components/LoginComponent.js","components/HomeComponent.js","App.js","serviceWorker.js","index.js"],"names":["actionTypes","WS_CONNECT","WS_MESSAGE","WS_DISCONNECT","HOME_ISLOGIN","HOME_ISDISCONNET","HOME_GAMEKIND","HOME_SELECTEDKEY","HOME_SETTINGDATA","HOME_RUNDATA","HOME_PLAYONCEDATA","HOME_FREEGAMECOUNT","ActionWSMessage","Msg","type","ActionSelectedKey","SelectedKey","ActionIsLogin","IsLogin","ActionIsDisconnet","IsDisconnet","ActionGameKind","GameKind","ActionSetting","Setting","ActionRunData","RunData","ActionPlayOnceData","PlayOnceData","initialState","WSMessageReducer","state","arguments","length","undefined","action","Object","objectSpread","data","Url","WSConnetReducer","HomeReducer","SettingReducer","RunDataReducer","FreeGameCount","PlayOnceDataReducer","ws","reducer","combineReducers","Message","Disconnet","WSDisconnet","WSMessage","regenerator_default","a","wrap","_context","prev","next","console","log","send","stop","_marked","this","_context2","close","_marked2","CallConnet","window","location","hostname","WebSocket","onopen","evt","onmessage","obj","JSON","parse","store","dispatch","Alert","error","position","effect","onShow","beep","timeout","onclose","err","_context3","takeEvery","t0","_marked3","_context4","_marked4","rootSaga","call","fork","rootSaga_marked","sagaMiddleware","createSagaMiddleware","createStore","reducers","applyMiddleware","run","InputComponet","props","react_default","createElement","input","value","onChange","e","handleChange","target","InputNumberComponet","input_number","min","defaultValue","Value","SwitchComponet","es_switch","checkedChildren","unCheckedChildren","checked","Checked","SettingComponent","s","create","getPrototypeOf","_this","SettingState","getOwnPropertyDescriptors","keyname","stringify","改變設定","SettingDispatch","lists","key","hasOwnProperty","push","Table","striped","bordered","hover","variant","React","Component","connect","bindActionCreators","RunDataComponent","count","intoFreeGameRate","handleChangeIntoFreeGameRate","setState","handleChangeCount","handleClick","數據","getState","Count","IntoFreeGameRate","RunDataState","normalCountList","freeGameCountList","totalMoneyIn","totalMoneyOut","i","data1","json","keys","data2","data3","data4","cc","toString","data5","groups","data6","data7","tooltip","title","style","marginLeft","padding","es_button","onClick","marginTop","react_c3js_default","RunDataDispatch","SvgComponent","wheel","prize","scatterPosition","forEach","item","index","array","offsetY","xy","Math","ceil","Size","floor","xmlns","version","width","height","map","fill","indexOf","strokeWidth","stroke","x","y","fillOpacity","strokeOpacity","textX","textY","textAnchor","fontSize","attributeName","dur","from","to","concat","repeatCount","additive","points","PlayOnceComponent","autoPlay","測試","PlayOnceDataState","Positions","PlayOnceDataDispatch","handleAutoPlay","clearInterval","timer","setInterval","max","disabled","defaultChecked","fontWeight","round","item1","index1","array1","LoginComponent","account","password","handleChangeGameKind","event","handleChangeAccount","handleChangePassword","handleClickButton","GameKindState","登入","Card","className","left","top","react_s_alert_default","stack","limit","Form","Group","as","Col","Label","Control","margin","placeholder","Text","Button","Content","Layout","Sider","HomeComponent","collapsed","show","items","onCollapse","SelectedKeyDispatch","要求設定","styleThatEnter","scale","styleThatLeft","spring","targetX","clickHandler","IsDisconnetState","IsLoginState","layout","minHeight","collapsible","menu","theme","defaultSelectedKeys","mode","Item","background","SelectedKeyState","components_SettingComponent","components_RunDataComponent","components_PlayOnceComponent","LoginComponent_LoginComponent","IsLoginDispatch","IsDisconnetDispatch","GameKindDispatch","App","components_HomeComponent","Boolean","match","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fc4bd4e4.chunk.js","sourcesContent":["const actionTypes = {\n    WS_CONNECT: 'WS_CONNECT',\n    WS_MESSAGE: 'WS_MESSAGE',\n    WS_DISCONNECT: 'WS_DISCONNECT',\n    HOME_ISLOGIN: 'HOME_ISLOGIN',\n    HOME_ISDISCONNET: 'HOME_ISDISCONNET',\n    HOME_GAMEKIND: 'HOME_GAMEKIND',\n    HOME_SELECTEDKEY: 'HOME_SELECTEDKEY',\n    HOME_SETTINGDATA: \"HOME_SETTINGDATA\",\n    HOME_RUNDATA: \"HOME_RUNDATA\",\n    HOME_PLAYONCEDATA: \"HOME_PLAYONCEDATA\",\n    HOME_FREEGAMECOUNT: \"HOME_FREEGAMECOUNT\",\n}\n\nexport {actionTypes}\n","import { actionTypes } from '../common/actionTypes'\n\nexport function ActionWSConnect(value) {\n  return {\n    type: actionTypes.WS_CONNECT,\n      Url: value,\n  }\n}\n\nexport function ActionWSDisconnect() {\n    return {\n        type: actionTypes.WS_DISCONNECT,\n    }\n}\n\nexport function ActionWSMessage(Msg) {\n    return {\n        type: actionTypes.WS_MESSAGE,\n        Msg: Msg,\n    }\n}\n\nexport function ActionSelectedKey(SelectedKey) {\n    return {\n        type: actionTypes.HOME_SELECTEDKEY,\n        SelectedKey: SelectedKey,\n    }\n}\n\nexport function ActionIsLogin(IsLogin) {\n    return {\n        type: actionTypes.HOME_ISLOGIN,\n        IsLogin: IsLogin,\n    }\n}\n\nexport function ActionIsDisconnet(IsDisconnet) {\n    return {\n        type: actionTypes.HOME_ISDISCONNET,\n        IsDisconnet: IsDisconnet,\n    }\n}\n\nexport function ActionGameKind(GameKind) {\n    return {\n        type: actionTypes.HOME_GAMEKIND,\n        GameKind: GameKind,\n    }\n}\n\nexport function ActionSetting(Setting) {\n    return {\n        type: actionTypes.HOME_SETTINGDATA,\n        Setting: Setting,\n    }\n}\n\nexport function ActionRunData(RunData) {\n    return {\n        type: actionTypes.HOME_RUNDATA,\n        RunData: RunData,\n    }\n}\n\nexport function ActionPlayOnceData(PlayOnceData) {\n    return {\n        type: actionTypes.HOME_PLAYONCEDATA,\n        PlayOnceData: PlayOnceData,\n    }\n}\n\nexport function ActionFreeGameCount(FreeGameCount) {\n    return {\n        type: actionTypes.HOME_FREEGAMECOUNT,\n        FreeGameCount: FreeGameCount,\n    }\n}\n","import {actionTypes} from '../common/actionTypes'\r\n\r\nconst initialState = {\r\n    Msg: \"\"\r\n}\r\n\r\nfunction WSMessageReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case actionTypes.WS_MESSAGE:\r\n            return {...state, Msg: action.data}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default WSMessageReducer\r\n","import {actionTypes} from '../common/actionTypes'\r\n\r\nconst initialState = {\r\n    Url: \"\"\r\n}\r\n\r\nfunction WSConnetReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case actionTypes.WS_CONNECT:\r\n            return {...state, Url: action.Url}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default WSConnetReducer\r\n","import {actionTypes} from '../common/actionTypes'\r\n\r\nconst initialState = {\r\n    SelectedKey: \"\",\r\n    IsLogin: false,\r\n    IsDisconnet: false,\r\n    GameKind: \"\",\r\n}\r\n\r\nfunction HomeReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case actionTypes.HOME_SELECTEDKEY:\r\n            return {...state, SelectedKey: action.SelectedKey}\r\n        case actionTypes.HOME_ISLOGIN:\r\n            return {...state, IsLogin: action.IsLogin}\r\n        case actionTypes.HOME_ISDISCONNET:\r\n            return {...state, IsDisconnet: action.IsDisconnet}\r\n        case actionTypes.HOME_GAMEKIND:\r\n            return {...state, GameKind: action.GameKind}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default HomeReducer\r\n","import {actionTypes} from '../common/actionTypes'\r\n\r\nconst initialState = {\r\n    Setting: {}\r\n}\r\n\r\nfunction SettingReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case actionTypes.HOME_SETTINGDATA:\r\n            return {...state, Setting: action.Setting}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default SettingReducer\r\n","import {actionTypes} from '../common/actionTypes'\r\n\r\nconst initialState = {\r\n    RunData: {}\r\n}\r\n\r\nfunction RunDataReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case actionTypes.HOME_RUNDATA:\r\n            return {...state, RunData: action.RunData}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default RunDataReducer\r\n","import {actionTypes} from '../common/actionTypes'\r\n\r\nconst initialState = {\r\n    FreeGameCount: 0,\r\n    PlayOnceData: {},\r\n}\r\n\r\nfunction PlayOnceDataReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case actionTypes.HOME_FREEGAMECOUNT:\r\n            return {...state, FreeGameCount: action.FreeGameCount}\r\n        case actionTypes.HOME_PLAYONCEDATA:\r\n            return {...state, PlayOnceData: action.PlayOnceData}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default PlayOnceDataReducer\r\n","// import {call} from 'redux-saga/effects'\r\n// import {put} from 'redux-saga/effects'\r\n// import {select} from 'redux-saga/effects'\r\nimport {takeEvery} from 'redux-saga/effects'\r\n// import {delay} from 'redux-saga'\r\n// import { actionTypes } from '../common/actionTypes'\r\nimport { ActionSetting, ActionRunData, ActionPlayOnceData, ActionIsLogin, ActionIsDisconnet} from '../actions'\r\n// import io from 'socket.io-client';\r\nimport store from '../store';\r\nimport Alert from 'react-s-alert';\r\n\r\nimport 'react-s-alert/dist/s-alert-default.css';\r\nimport 'react-s-alert/dist/s-alert-css-effects/genie.css';\r\n\r\n\r\nlet ws\r\n\r\nexport function* Message(action){\r\n    yield console.log('* Message');\r\n    yield ws.send(action.Msg);\r\n}\r\n\r\n// export function* Connet() {\r\n//     yield console.log('* Connet');\r\n//     const newState = yield select(state => state.WSConnetReducer.Url);\r\n//     ws = new WebSocket(newState)\r\n//     ws.onopen = function(evt) {\r\n//         console.log('Connection open ...');\r\n//     };\r\n//\r\n//     ws.onmessage = function(evt) {\r\n//         console.log('Received Message: ' + evt.data);\r\n//         // ws.close();\r\n//\r\n//         // put(Setting(evt.data));\r\n//         // var obj = JSON.parse(evt.data);\r\n//         // console.log(JSON.stringify(evt.data))\r\n//         // console.log(typeof JSON.parse(evt.data));\r\n//         // console.log(typeof Object.values(JSON.parse(evt.data)));\r\n//\r\n//         // console.log(evt.data);\r\n//         // console.log(JSON.parse(evt.data));\r\n//         // console.log(JSON.parse(evt.data)[\"Setting\"]);\r\n//         let obj = JSON.parse(evt.data)[\"設定\"];\r\n//         if (obj !== undefined) {\r\n//             // console.log(Setting(obj));\r\n//             store.dispatch(Setting(obj));\r\n//         }\r\n//\r\n//         // store.dispatch(WSConnect('ws://localhost:3688/test'));\r\n//\r\n//         // put(WSDisconnect());\r\n//         // for(let a in obj) {\r\n//         //     console.log(obj[a]);\r\n//         //     console.log(typeof a);\r\n//         //     console.log(typeof obj[a]);\r\n//         // }\r\n//\r\n//         // obj.map(\r\n//         //     function(i){\r\n//         //         return 0\r\n//         //         // console.log(i);\r\n//         //     });\r\n//         // store.dispatch(Setting(evt.data));\r\n//     };\r\n//\r\n//     ws.onclose = function(evt) {\r\n//         console.log('Connection closed.');\r\n//     };\r\n// }\r\n\r\nexport  function* Disconnet() {\r\n    yield console.log('* Disconnet');\r\n    yield ws.close();\r\n}\r\n\r\nexport function CallConnet() {\r\n    try {\r\n        console.log('CallConnet');\r\n        console.log(window.location.hostname);\r\n        ws = new WebSocket(\"ws://\" + window.location.hostname +\":7688/ws\");\r\n        ws.onopen = function(evt) {\r\n            console.log('Connection open ...');\r\n        };\r\n\r\n        ws.onmessage = function(evt) {\r\n            console.log('Received Message: ' + evt.data);\r\n\r\n            let obj = JSON.parse(evt.data)[\"要求設定\"];\r\n            if (obj !== undefined) {\r\n                // console.log(Setting(obj));\r\n                store.dispatch(ActionSetting(obj));\r\n            }\r\n\r\n            obj = JSON.parse(evt.data)[\"數據\"];\r\n            if (obj !== undefined) {\r\n                console.log(obj);\r\n                store.dispatch(ActionRunData(obj));\r\n            }\r\n\r\n            obj = JSON.parse(evt.data)[\"測試\"];\r\n            if (obj !== undefined) {\r\n                console.log(obj);\r\n                store.dispatch(ActionPlayOnceData(obj));\r\n                // if (obj[\"Scatter數量\"] >= 3){\r\n                //     store.dispatch(FreeGameCount(store.getState().PlayOnceDataReducer.FreeGameCount + 15));\r\n                // }\r\n            }\r\n\r\n            obj = JSON.parse(evt.data)[\"登入\"];\r\n            if (obj !== undefined) {\r\n                if (obj === false) {\r\n                    Alert.error('帳密有誤', {\r\n                        position: 'top',\r\n                        effect: 'genie',\r\n                        onShow: function () {\r\n                            console.log('aye!')\r\n                        },\r\n                        beep: false,\r\n                        timeout: 3000,\r\n                        // offset: 100,\r\n                    });\r\n                }\r\n\r\n                console.log(obj);\r\n                store.dispatch(ActionIsLogin(obj));\r\n                // if (obj[\"Scatter數量\"] >= 3){\r\n                //     store.dispatch(FreeGameCount(store.getState().PlayOnceDataReducer.FreeGameCount + 15));\r\n                // }\r\n            }\r\n        }\r\n\r\n        ws.onclose = function(evt) {\r\n            store.dispatch(ActionIsDisconnet(true))\r\n            console.log('Connection closed.');\r\n        };\r\n    } catch (err) {\r\n\r\n    }\r\n}\r\n\r\n// export function* WSConnet() {\r\n//     yield console.log('* WSConnet');\r\n//     try {\r\n//         yield takeEvery('WS_CONNECT', Connet);\r\n//\r\n//     } catch (err) {\r\n//\r\n//     }\r\n// }\r\n\r\nexport function* WSDisconnet() {\r\n    yield console.log('* WSDisconnet');\r\n    try {\r\n        yield takeEvery('WS_DISCONNECT', Disconnet);\r\n    } catch (err) {\r\n\r\n    }\r\n}\r\n\r\nexport function* WSMessage() {\r\n    yield console.log('* WSMessage');\r\n    try {\r\n        yield takeEvery('WS_MESSAGE', Message);\r\n    } catch (err) {\r\n\r\n    }\r\n}\r\n\r\n\r\n","import {combineReducers} from 'redux'\r\nimport WSMessageReducer from \"./WSMessageReducer\";\r\nimport WSConnetReducer from \"./WSConnetReducer\";\r\nimport HomeReducer from \"./HomeReducer\";\r\nimport SettingReducer from \"./SettingReducer\";\r\nimport RunDataReducer from \"./RunDataReducer\";\r\nimport PlayOnceDataReducer from \"./PlayOnceDataReducer\";\r\n\r\n\r\nconst reducer = combineReducers({WSMessageReducer, WSConnetReducer, HomeReducer, SettingReducer, RunDataReducer, PlayOnceDataReducer})\r\n\r\nexport default reducer\r\n","import { call, fork } from 'redux-saga/effects'\r\nimport {CallConnet, WSMessage, WSDisconnet} from './sagas/websocketSaga'\r\n\r\nexport default function* rootSaga() {\r\n    // yield fork(WSConnet)\r\n    yield call(CallConnet)\r\n    yield fork(WSDisconnet)\r\n    yield fork(WSMessage)\r\n}\r\n","import {createStore, applyMiddleware} from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport reducers from './reducers'\r\nimport rootSaga from './rootSaga'\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    applyMiddleware(sagaMiddleware)\r\n)\r\n\r\nsagaMiddleware.run(rootSaga)\r\n\r\nexport default store\r\n","import {bindActionCreators} from \"redux\";\r\nimport {ActionSetting, ActionWSMessage} from \"../actions\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport React from \"react\";\r\nimport {Input, InputNumber, Switch} from \"antd\";\r\n// import {Menu} from \"antd/lib/menu\";\r\nimport {Table} from \"react-bootstrap\";\r\nimport store from \"../store\";\r\n// import store from \"../store\";\r\n\r\nfunction InputComponet(props){\r\n    return <div><Input value={props.value} onChange={(e) => (props.handleChange(props, e.target.value))}/></div>\r\n}\r\n\r\nfunction InputNumberComponet(props){\r\n    return <div><InputNumber min={1} defaultValue={props.value} onChange={(Value) => (props.handleChange(props, Value))}/></div>\r\n}\r\n\r\nfunction SwitchComponet(props){\r\n    return <div><Switch checkedChildren=\"開\" unCheckedChildren=\"關\" checked={props.value} onChange={(Checked) => (props.handleChange(props, Checked))}/></div>\r\n}\r\n\r\nclass SettingComponent extends React.Component {\r\n\r\n    handleChange = (props, value) => {\r\n        let s = Object.create(\r\n            Object.getPrototypeOf(this.props.SettingState),\r\n            Object.getOwnPropertyDescriptors(this.props.SettingState)\r\n        );\r\n        s[props.keyname] = value;\r\n        store.dispatch(ActionWSMessage(JSON.stringify({\"改變設定\": s})));\r\n        this.props.SettingDispatch(s)\r\n\r\n        // this.props.Set(this.props.Setting[key])\r\n    }\r\n\r\n    render() {\r\n        let lists = [];\r\n        for (let key in  this.props.SettingState){\r\n            if(this.props.SettingState.hasOwnProperty(key)) {\r\n                switch (typeof this.props.SettingState[key]) {\r\n                    case \"string\":\r\n                        lists.push(<tr key={key}>\r\n                            <td>{key}</td>\r\n                            <td><InputComponet keyname={key} value={this.props.SettingState[key]}\r\n                                               handleChange={this.handleChange}/></td>\r\n                        </tr>)\r\n                        break;\r\n                    case \"number\":\r\n                        lists.push(<tr key={key}>\r\n                            <td>{key}</td>\r\n                            <td><InputNumberComponet keyname={key} value={this.props.SettingState[key]}\r\n                                                     handleChange={this.handleChange}/></td>\r\n                        </tr>)\r\n                        break;\r\n                    case \"boolean\":\r\n                        lists.push(<tr key={key}>\r\n                            <td>{key}</td>\r\n                            <td><SwitchComponet keyname={key} value={this.props.SettingState[key]}\r\n                                                handleChange={this.handleChange}/></td>\r\n                        </tr>)\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Table striped bordered hover variant=\"dark\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>選項</th>\r\n                        <th>數值</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {lists}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        SettingState: state.SettingReducer.Setting,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        SettingDispatch: bindActionCreators(ActionSetting, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingComponent)\r\n","import {bindActionCreators} from \"redux\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport React from \"react\";\r\nimport {ActionRunData, ActionWSMessage} from \"../actions\";\r\nimport {Button, InputNumber, Tooltip} from \"antd\";\r\nimport store from \"../store\";\r\nimport C3Chart from 'react-c3js';\r\nimport 'c3/c3.css';\r\n// import c3 from 'c3';\r\n\r\n\r\n// class Chart extends React.Component {\r\n//     componentDidMount() {\r\n//         this._updateChart();\r\n//     }\r\n//     componentDidUpdate() {\r\n//         this._updateChart();\r\n//     }\r\n//     _updateChart() {\r\n//         console.log(\"this.props.data\")\r\n//         console.log(this.props.data)\r\n//         // const chart = c3.generate({\r\n//         //     bindto: '#chart',\r\n//         //     data: this.props.data,\r\n//         // });\r\n//     }\r\n//     render() {\r\n//         return <div id=\"chart\">hi</div>;\r\n//     }\r\n// }\r\n//\r\n// let columns = [\r\n//     ['My Numbers', 30, 200, 100, 400, 150, 250],\r\n//     ['Your Numbers', 50, 20, 10, 40, 15, 25]\r\n// ];\r\n\r\nclass RunDataComponent extends React.Component {\r\n    state = {\r\n        count: 1,\r\n        intoFreeGameRate: 0\r\n    };\r\n\r\n    handleChangeIntoFreeGameRate = (props) => {\r\n        this.setState({intoFreeGameRate: props});\r\n    }    \r\n\r\n    handleChangeCount = (props) => {\r\n        this.setState({count: props});\r\n    }\r\n\r\n    handleClick = () => {\r\n        if (this.state.count > 0) {\r\n            store.dispatch(ActionWSMessage(JSON.stringify({\"數據\": {GameKind: store.getState().HomeReducer.GameKind, Count:this.state.count, IntoFreeGameRate:this.state.intoFreeGameRate}})));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let lists = [];\r\n        for (let key in this.props.RunDataState){\r\n            if(this.props.RunDataState.hasOwnProperty(key)) {\r\n                lists.push(this.props.RunDataState[key])\r\n            }\r\n        }\r\n\r\n        // let countList = []\r\n        // let oddsList = []\r\n        let normalCountList = []\r\n        let freeGameCountList = []\r\n        // console.log(lists)\r\n        let totalMoneyIn = 0\r\n        let totalMoneyOut = 0\r\n        // let totalWinMoney = 0\r\n        for (let i = 0; i < lists.length; i++) {\r\n            totalMoneyIn = totalMoneyIn + lists[i][\"階段總投入\"]\r\n            totalMoneyOut = totalMoneyOut + lists[i][\"階段總吐出\"]\r\n            // totalWinMoney = totalMoneyOut - totalMoneyIn\r\n        }\r\n\r\n        const data1 =  {\r\n            json: lists,\r\n            keys: {\r\n                value: ['階段回吐率']\r\n            },\r\n            type: 'line',\r\n            // groups: [\r\n            //     ['task_1', 'task_2']\r\n            // ]\r\n        }\r\n\r\n        const data2 =  {\r\n            json: lists,\r\n            keys: {\r\n                value: ['階段總輸贏']\r\n            },\r\n            type: 'line',\r\n            // groups: [\r\n            //     ['task_1', 'task_2']\r\n            // ]\r\n        }\r\n\r\n        const data3 =  {\r\n            json: lists,\r\n            keys: {\r\n                value: ['累積回吐率']\r\n            },\r\n            type: 'line',\r\n            // groups: [\r\n            //     ['task_1', 'task_2']\r\n            // ]\r\n        }\r\n\r\n        const data4 =  {\r\n            json: lists,\r\n            keys: {\r\n                value: ['累積總輸贏']\r\n            },\r\n            type: 'line',\r\n            // groups: [\r\n            //     ['task_1', 'task_2']\r\n            // ]\r\n        }\r\n\r\n        // console.log(normalCountList)\r\n        // console.log(['normal獎項0次數', 'normal獎項10次數', 'normal獎項20次數'])\r\n\r\n        // let newnormalCountList = ['normal獎項0次數', 'normal獎項10次數', 'normal獎項20次數']\r\n        // for (let key of newnormalCountList){\r\n        //     normalCountList.push(key)\r\n        // }\r\n\r\n        // console.log(lists)\r\n        // normalCountList = []\r\n        // normalCountList.push(\"normal獎項0次數\")\r\n        // normalCountList.push('normal獎項10次數')\r\n        // normalCountList.push('normal獎項20次數')\r\n\r\n        let cc = 0\r\n        // let newnormalCountList = []\r\n\r\n        while (cc <= 20){\r\n            normalCountList.push(\"normal獎項\" + cc.toString() +\"次數\")\r\n            freeGameCountList.push(\"freeGame獎項\" + cc.toString() +\"次數\")\r\n            cc++\r\n        }\r\n\r\n        let data5 =  {\r\n            json: lists,\r\n            keys: {\r\n                value: normalCountList\r\n            },\r\n            type: 'bar',\r\n            groups: [\r\n                normalCountList\r\n            ]\r\n        }\r\n\r\n        let data6 =  {\r\n            json: lists,\r\n            keys: {\r\n                value: freeGameCountList\r\n            },\r\n            type: 'bar',\r\n            groups: [\r\n                freeGameCountList\r\n            ]\r\n        }\r\n\r\n        const data7 =  {\r\n            json: lists,\r\n            keys: {\r\n                value: ['normal次數','normal賠率','freeGame次數', 'freeGame賠率']\r\n            },\r\n            type: 'line',\r\n            // groups: [\r\n            //     ['task_1', 'task_2']\r\n            // ]\r\n        }\r\n\r\n        return <div>\r\n            <Tooltip title=\"強制進FreeGame機率\">\r\n                <InputNumber style={{\"marginLeft\":30}} defaultValue={0} onChange={this.handleChangeIntoFreeGameRate}/>\r\n            </Tooltip>\r\n            <Tooltip title=\"執行數據次數\">\r\n                <InputNumber style={{\"marginLeft\":30}} min={1} defaultValue={1} onChange={this.handleChangeCount}/>\r\n            </Tooltip>            \r\n            <span style={{\"padding\":10}}><Button type=\"primary\" onClick={this.handleClick}>開始</Button></span>\r\n            {/*<Chart data={data1}/>*/}\r\n            <div style={{\"marginTop\":20}}> {((totalMoneyOut / totalMoneyIn  * 100) && \"總回吐率\" + (totalMoneyOut / totalMoneyIn  * 100) + \"%\") || \"\"} </div>\r\n            <div style={{\"marginTop\":20}}><C3Chart data={data1} /></div>\r\n            <div style={{\"marginTop\":20}}><C3Chart data={data2} /></div>\r\n            <div style={{\"marginTop\":20}}><C3Chart data={data3} /></div>\r\n            <div style={{\"marginTop\":20}}><C3Chart data={data4} /></div>\r\n            <div style={{\"marginTop\":20}}><C3Chart data={data5} /></div>\r\n            <div style={{\"marginTop\":20}}><C3Chart data={data6} /></div>\r\n            <div style={{\"marginTop\":20}}><C3Chart data={data7} /></div>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        RunDataState: state.RunDataReducer.RunData,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        RunDataDispatch: bindActionCreators(ActionRunData, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RunDataComponent)\r\n","import React from \"react\"\nimport { bindActionCreators } from \"redux\"\nimport connect from \"react-redux/es/connect/connect\"\n// import styleCss from \"../css/style.css\"\nimport { Switch, Button, Tooltip, InputNumber } from \"antd\"\nimport { ActionPlayOnceData, ActionWSMessage } from \"../actions\"\nimport store from \"../store\"\n\n\nfunction SvgComponent(props) {\n    const { wheel, prize } = props\n    // if (!wheel) {\n    //     return \"\"\n    // }\n    // console.log(props)\n\n    const position = []\n    let scatterPosition = null\n    const Size = 200\n    if (prize) {\n        // console.log(prize)\n        prize.forEach(function (item, index, array) {\n            let xy = \"\"\n            // let offsetX\n            // if (index % 2 === 0) {\n            //     offsetX = Math.ceil(index / 2) * 3\n            // } else {\n            //     offsetX = -Math.ceil(index / 2) * 3\n            // }\n\n            let offsetY\n            if (index % 2 === 0) {\n                offsetY = Math.ceil(index / 2) * 3\n            } else {\n                offsetY = -Math.ceil(index / 2) * 3\n            }\n            if (item[\"圖案編號\"] !== 200) {\n                // console.log(item)\n                item[\"連線位置\"].forEach(function (item, index, array) {\n                    xy = xy + (Size / 2 + (Size + 1) * ((item - 1) % 5)) + \" \" + (Size / 2 + (Size + 1) * (Math.floor((item - 1) / 5)) + offsetY)\n\n                    if ((array.length - 1) !== index) {\n                        xy = xy + \",\"\n                    }\n                })\n\n                position.push(xy)\n            }\n            else {\n                // console.log(item)\n                scatterPosition = (item[\"連線位置\"])\n            }\n        })\n    }\n\n    // console.log(position)\n\n    return <div>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width={Size * 5} height={Size * 3}>\n            {wheel && wheel.map(function (item, index, array) {\n                return (\n                    <rect key={index} width={Size} height={Size}\n                        fill={(scatterPosition && scatterPosition.length >= 3 && scatterPosition.indexOf(index + 1) >= 0 ? \"Gold\" : (store.getState().PlayOnceDataReducer.PlayOnceData[\"FreeGame次數\"] > 0 ? \"rgb(50,50,50)\" : \"rgb(200,200,200)\"))}\n                        // fill={\"rgb(200, 200, 200)\"}\n                        strokeWidth=\"1\"\n                        stroke={\"black\"}\n                        x={Size * (index % 5)}\n                        y={Size * (Math.floor(index / 5))}\n                        fillOpacity=\"0.5\"\n                        strokeOpacity=\"0.8\"\n                    >\n                    </rect>\n                )\n            })}\n            {wheel && wheel.map(function (item, index, array) {\n                // if (scatterPosition) {\n                //     console.log(index + 1, scatterPosition.indexOf(index + 1), scatterPosition.indexOf(index + 1) >= 0, scatterPosition)\n                // }\n\n                let textX = Size / 2 + Size * (index % 5)\n                let textY = Size / 1.6 + Size * (Math.floor(index / 5))\n                return (\n                    <text key={index} textAnchor=\"middle\"\n                        x={textX}\n                        y={textY}\n                        fontSize=\"50pt\"\n                        fillOpacity=\"0.5\"\n                        // strokeOpacity=\"0.8\"\n                        stroke={\"black\"}\n                        // stroke={scatterPosition && scatterPosition.length >= 3 && scatterPosition.indexOf(index + 1) >= 0 ? \"rgb(0,0,0)\" : \"rgb(0,255,0)\"}\n                        // strokeWidth={scatterPosition && scatterPosition.length >= 3 && scatterPosition.indexOf(index + 1) >= 0 ? 1 : 10}\n                        strokeWidth={2}\n                        fill={scatterPosition && scatterPosition.indexOf(index + 1) >= 0 ? \"blue\" : (item === 255) ? \"LawnGreen \" : \"red\"}\n                    >\n                        {item}\n                        {\n                            (scatterPosition && scatterPosition.length > 0 && scatterPosition.indexOf(index + 1) >= 0 ?\n                                <animateTransform attributeName=\"transform\" dur=\"1.5s\" type=\"translate\" from=\"0,0\"\n                                    to={`${-textX},${-textY + Size / 10}`} repeatCount=\"indefinite\"\n                                    additive=\"sum\" /> : \"\")\n                        }\n                        {\n                            (scatterPosition && scatterPosition.length > 0 && scatterPosition.indexOf(index + 1) >= 0 ?\n                                <animateTransform attributeName=\"transform\" dur=\"1.5s\" type=\"scale\" from=\"1\" to=\"2\"\n                                    repeatCount=\"indefinite\" additive=\"sum\" /> : \"\")\n                        }\n                    </text>\n                )\n            })}\n            {position && position.map(function (item, index, array) {\n                // console.log(index)\n                let stroke\n                if (index % 2 === 0) {\n                    stroke = `rgb(${255 - (index % 3 * 120)}, ${(index % 21) * 9}, ${255 - (index % 6) * 51})`\n                } else {\n                    stroke = `rgb(${index % 3 * 90}, ${255 - ((index % 21) * 12.2)}, ${(index % 6) * 40})`\n                }\n\n                // console.log(stroke)\n                return <polyline key={index} points={item} fill=\"none\" stroke={stroke} strokeWidth=\"2\" />\n            }\n            )\n\n            }\n        </svg>\n    </div>\n}\n\nclass PlayOnceComponent extends React.Component {\n    state = {\n        autoPlay: false,\n    }\n\n    handleClick = () => {\n        // console.log(this.props.PlayOnceDataState)\n        store.dispatch(ActionWSMessage(JSON.stringify({\n            \"測試\": {\n                GameKind: store.getState().HomeReducer.GameKind,\n                FreeGameCount: this.props.PlayOnceDataState[\"FreeGame次數\"],\n                // PositionCount: this.props.PlayOnceDataState[\"FreeGame次數\"]\n                Positions: this.props.PlayOnceDataState[\"位置\"]\n            }\n        })))\n\n        // if (this.props.FreeGameCountState > 0) {\n        //     this.props.FreeGameCountDispatch(this.props.FreeGameCountState - 1)\n        // }\n    }\n\n    handleChange = (value) => {\n        // console.log(value)\n        // this.props.FreeGameCountDispatch(value)\n        let s = Object.create(\n            Object.getPrototypeOf(this.props.PlayOnceDataState),\n            Object.getOwnPropertyDescriptors(this.props.PlayOnceDataState)\n        )\n        s[\"FreeGame次數\"] = value\n        this.props.PlayOnceDataDispatch(s)\n    }\n\n    handleAutoPlay = (value) => {\n        // console.log(this.state.autoPlay, value)\n        if (this.state.autoPlay === true) {\n            clearInterval(this.timer)\n            // console.log(\"clearInterval(this.handleClick)\")\n        } else {\n            this.timer = setInterval(() => this.handleClick(), 2000)\n            // console.log(\"this.timer = setInterval(() => this.handleClick(), 2000)\")\n        }\n\n        this.setState({\n            autoPlay: !this.state.autoPlay\n        })\n    }\n\n    componentDidMount() {\n\n        //this.timer = setInterval(this.tick.bind(this), 50) //或\n        // this.timer = setInterval(() => this.handleClick(), 2000)\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    render() {\n        // console.log(\"PlayOnceComponent Render\", this.props.PlayOnceDataState)\n        return <div>\n            <div>\n                <div>\n                    <Tooltip title=\"剩餘FreeGame次數\">\n                        <InputNumber min={0} max={99999} value={this.props.PlayOnceDataState[\"FreeGame次數\"] || 0}\n                            onChange={this.handleChange} disabled={this.state.autoPlay} />\n                    </Tooltip>\n                    <span style={{ \"padding\": 10 }}><Button type=\"primary\" onClick={this.handleClick}\n                        disabled={this.state.autoPlay}>開始</Button></span>\n                    <span><Switch checkedChildren=\"Auto-On\" unCheckedChildren=\"Auto-Off\"\n                        defaultChecked={this.state.autoPlay} onChange={this.handleAutoPlay} /></span>\n                </div>\n\n                <div style={{ \"marginTop\": 20 }}><SvgComponent prize={this.props.PlayOnceDataState[\"獎項\"]}\n                    wheel={this.props.PlayOnceDataState[\"滾輪\"]} /></div>\n\n                <div style={{ fontSize: \"large\", fontWeight: \"bold\", \"marginTop\": 25 }}>\n                    <span>{Math.round(this.props.PlayOnceDataState[\"總賠率\"] * 100) / 100 > 0 && \"總賠率:\" + Math.round(this.props.PlayOnceDataState[\"總賠率\"] * 100) / 100}</span>\n                    <span>{this.props.PlayOnceDataState[\"Scatter數量\"] > 0 && \"  Scatter數量:\" + this.props.PlayOnceDataState[\"Scatter數量\"]}</span>\n                    {\n                        this.props.PlayOnceDataState[\"獎項\"] &&\n                        this.props.PlayOnceDataState[\"獎項\"].map(function (item, index, array) {\n                            // console.log(item)\n                            return <div key={index}>\n                                {Object.keys(item).map(function (item1, index1, array1) {\n                                    return <span key={index1}>{item1 + \":【\" + item[item1] + \"】 \"}</span>\n                                })}\n                            </div>\n                        }\n                        )\n                    }\n                </div>\n\n            </div>\n        </div>\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        // FreeGameCountState: state.PlayOnceDataReducer.FreeGameCount,\n        PlayOnceDataState: state.PlayOnceDataReducer.PlayOnceData,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        // FreeGameCountDispatch: bindActionCreators(FreeGameCount, dispatch),\n        PlayOnceDataDispatch: bindActionCreators(ActionPlayOnceData, dispatch),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayOnceComponent)","import React from \"react\";\r\nimport {Card, Form, Button, Col} from 'react-bootstrap';\r\nimport store from \"../store\";\r\nimport {ActionWSMessage, ActionGameKind} from \"../actions\";\r\nimport Alert from 'react-s-alert';\r\n\r\nimport 'react-s-alert/dist/s-alert-default.css';\r\nimport 'react-s-alert/dist/s-alert-css-effects/genie.css';\r\n\r\nexport default class LoginComponent extends React.Component {\r\n    state = {\r\n        // gameKind: \"\",\r\n        account: \"\",\r\n        password: \"\",\r\n    }\r\n\r\n    handleChangeGameKind = (event) => {\r\n        store.dispatch(ActionGameKind(event.target.value));\r\n        console.log(\"gameKind\", event.target.value)\r\n    }\r\n\r\n\r\n    handleChangeAccount = (event) => {\r\n        this.setState({account: event.target.value})\r\n        console.log(\"account\", event.target.value)\r\n    }\r\n\r\n    handleChangePassword = (event) => {\r\n        this.setState({password: event.target.value})\r\n        console.log(\"password\", event.target.value)\r\n    }\r\n\r\n    handleClickButton = (event) => {\r\n        // event.preventDefault();\r\n        if (this.props.GameKindState === \"\" || this.state.account === \"\" || this.state.password === \"\") {\r\n            Alert.error('選項不可為空', {\r\n                position: 'top',\r\n                effect: 'genie',\r\n                onShow: function () {\r\n                    console.log('aye!')\r\n                },\r\n                beep: false,\r\n                timeout: 3000,\r\n                // offset: 100,\r\n            });\r\n\r\n            return\r\n        }\r\n\r\n        store.dispatch(ActionWSMessage(JSON.stringify({\"登入\": {account: this.state.account, password: this.state.password}})));\r\n    }\r\n\r\n    render() {\r\n        return <Card className=\"text-center\" style={{position: 'absolute', left: '42%', top: '20%', width: '18rem'}}>\r\n            <Alert stack={{limit: 3}}/>\r\n            <Form>\r\n                <Form.Group as={Col} onChange={this.handleChangeGameKind}>\r\n                    <Form.Label>GameKind</Form.Label>\r\n                    <Form.Control as=\"select\">\r\n                        <option>選擇遊戲種類</option>\r\n                        <option>125</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group style={{margin: '15px'}} onChange={this.handleChangeAccount}>\r\n                    <Form.Label>Account</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"請輸入帳號\"/>\r\n                    <Form.Text className=\"text-muted\">\r\n\r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group style={{margin: '15px'}} onChange={this.handleChangePassword}>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"請輸入密碼\"/>\r\n                </Form.Group>\r\n                <Button variant=\"primary\" style={{margin: '10px'}} onClick={this.handleClickButton}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </Card>\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {connect} from 'react-redux'\r\nimport 'antd/dist/antd.css';\r\nimport {bindActionCreators} from \"redux\";\r\nimport {ActionSelectedKey, ActionWSMessage, ActionIsLogin, ActionIsDisconnet, ActionGameKind} from \"../actions\";\r\nimport {Layout} from 'antd';\r\nimport {Menu} from 'antd';\r\nimport SettingComponet from './SettingComponent';\r\nimport RunDataComponent from './RunDataComponent';\r\nimport PlayOnceComponet from './PlayOnceComponent';\r\nimport LoginComponent from './LoginComponent';\r\nimport store from '../store';\r\nimport {/*Motion,*/ spring, /*TransitionMotion*/} from 'react-motion';\r\n// import { Table } from 'react-bootstrap';\r\n// import { ButtonToolbar } from 'react-bootstrap';\r\n// import { Alert } from 'react-bootstrap';\r\n// import {Button} from 'reactstrap';\r\n// import 'bootstrap/dist/css/bootstrap.css';\r\n// import { bindActionCreators } from 'redux'\r\n// import SortableList from './Sorttable';\r\n// import Sortable from 'react-sortablejs';\r\n// import CardTest from './CardTest';\r\n// import WheelsComponent from './WheelsComponent';\r\n// import {Drag} from \"./ReactWithGesture\";\r\n\r\nconst {Content, Sider} = Layout;\r\n\r\nclass HomeComponent extends React.Component {\r\n\r\n    state = {\r\n        left: 0,\r\n        collapsed: false,\r\n        show: false,\r\n        items:[1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6,1, 2, 3, 4, 5, 6,1, 2, 3, 4, 5, 6,1, 2, 3, 4, 5, 6,1, 2, 3, 4, 5, 6,1, 2, 3, 4, 5, 6,]\r\n    }\r\n\r\n    willEnter(styleThatEnter) {\r\n        return { scale: 0 }\r\n    }\r\n\r\n    willLeave(styleThatLeft) {\r\n        return { scale: spring(0) }\r\n    }\r\n\r\n    clickHandler() {\r\n        let targetX = 0\r\n        if(this.state.left === 0) {\r\n            targetX = 200\r\n        } else {\r\n            targetX = 0\r\n        }\r\n\r\n        this.setState({\r\n            left: targetX\r\n        })\r\n\r\n        this.setState({\r\n            show: !this.state.show\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.clickHandler()\r\n        this.props.SelectedKeyDispatch(\"首頁\")\r\n    }\r\n\r\n    componentWillMount() {\r\n    }\r\n\r\n    onCollapse = (collapsed) => {\r\n        // console.log(collapsed);\r\n        this.setState({collapsed});\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        // console.log('click ', e);\r\n        // console.log(SelectedKey(e.key));\r\n        // store.dispatch(SelectMenu('click'))\r\n        this.props.SelectedKeyDispatch(e.key)\r\n        if (e.key === '設定') {\r\n            // store.dispatch(WSMessage(\"要求設定\"))\r\n            store.dispatch(ActionWSMessage(JSON.stringify({\"要求設定\": ''})));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.props.IsDisconnetState ? \"你已經斷線，請重新整理頁面\" :\r\n            (this.props.IsLoginState ?\r\n            <Layout style={{minHeight: '100vh'}}>\r\n                <Sider\r\n                    collapsible\r\n                    collapsed={this.state.collapsed}\r\n                    onCollapse={this.onCollapse}\r\n                >\r\n                    <div className=\"logo\"/>\r\n                    <Menu className=\"HomeMenu\" theme=\"dark\" defaultSelectedKeys={['首頁']} mode=\"inline\"\r\n                          onClick={this.handleClick}>\r\n                        <Menu.Item key=\"首頁\">\r\n                            {/*<Icon type=\"home\" />*/}\r\n                            {/*<Icon component={PandaSvg} />*/}\r\n                            <span>首頁</span>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"數據\">\r\n                            {/*<img src=\"https://zos.alipayobjects.com/rmsportal/DgGuKTJUjLNOsvluZEbY.png\" alt=\"https://zos.alipayobjects.com/rmsportal/DgGuKTJUjLNOsvluZEbY.png\" width=\"47px\" height=\"47px\"/>*/}\r\n                            {/*<Icon type=\"home\" />*/}\r\n                            <span>數據</span>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"測試\">\r\n                            {/*<Icon type=\"setting\" />*/}\r\n                            <span>測試</span>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"設定\">\r\n                            {/*<Icon type=\"setting\" />*/}\r\n                            <span>設定</span>\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                </Sider>\r\n                <Layout>\r\n                    {/*<Header style={{ background: '#fff', padding: 0 }} />*/}\r\n                    <Content style={{margin: '24px 24px 24px 24px', padding: 12}}>\r\n                        <div style={{padding: 24, background: '#fff', minHeight: 720}}>\r\n                            <div>\r\n\r\n                            </div>\r\n                            {/*<Drag items={'Lorem ipsum dolor sit'.split(' ')}/>*/}\r\n                            {/*<Drag items={'Lorem ipsum dolor sit'.split(' ')}/>*/}\r\n                            {/*<WheelsComponent/>*/}\r\n                            {/*<CardTest/>*/}\r\n                            {/*<Demo/>*/}\r\n                            {/*<DragDemo/>*/}\r\n                            {/*<SortableList*/}\r\n                                {/*items={this.state.items}*/}\r\n                                {/*onChange={(items) => {*/}\r\n                                    {/*this.setState({ items });*/}\r\n                                {/*}}*/}\r\n                            {/*>*/}\r\n                            {/*</SortableList>*/}\r\n                            {(this.props.SelectedKeyState === \"設定\") && <div><SettingComponet/></div>}\r\n                            {(this.props.SelectedKeyState === \"數據\") && <div><RunDataComponent/></div>}\r\n                            {(this.props.SelectedKeyState === \"測試\") && <div><PlayOnceComponet/></div>}\r\n                        </div>\r\n\r\n                    </Content>\r\n                    {/*<Footer style={{ textAlign: 'center' }}>*/}\r\n\r\n                    {/*</Footer>*/}\r\n                </Layout>\r\n            </Layout> : <LoginComponent/>)\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        SelectedKeyState: state.HomeReducer.SelectedKey,\r\n        IsLoginState: state.HomeReducer.IsLogin,\r\n        IsDisconnetState: state.HomeReducer.IsDisconnet,\r\n        GameKindState: state.HomeReducer.GameKind,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        SelectedKeyDispatch: bindActionCreators(ActionSelectedKey, dispatch),\r\n        IsLoginDispatch: bindActionCreators(ActionIsLogin, dispatch),\r\n        IsDisconnetDispatch: bindActionCreators(ActionIsDisconnet, dispatch),\r\n        GameKindDispatch: bindActionCreators(ActionGameKind, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeComponent)\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport HomeComponet from './components/HomeComponent';\n// import Demo from './components/Demo';\n// import { withRouter } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n        <div>\n            {/*<Demo/>*/}\n            {/*<Stage options={{ backgroundColor: 0x1099bb }}>*/}\n                {/*<BasicText />*/}\n                {/*<RichText />*/}\n                {/*<TweenComponent/>*/}\n            {/*</Stage>*/}\n            <HomeComponet />\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport { Provider } from 'react-redux';\n// import {Button} from \"react-bootstrap\";\n// import Steps, { Step } from 'rc-steps';\n// import ConnectElements from 'react-connect-elements';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import { Button , ButtonToolbar, Container, Row, Col } from 'react-bootstrap';\n// import { useSpring, animated, interpolate } from 'react-spring'\n\n// function Demo(){\n//     const { o, xyz, color } = useSpring({\n//         from: { o: 0, xyz: [0, 0, 0], color: 'red' },\n//         o: 1, xyz: [10, 20, 5], color: 'green'\n//     })\n//\n//     return     <animated.div\n//         style={{\n//             // If you can, use plain animated values like always, ...\n//             // You would do that in all cases where values \"just fit\"\n//             color,\n//             // Unless you need to interpolate them\n//             background: o.interpolate(o => `rgba(210, 57, 77, ${o})`),\n//             // Which works with arrays as well\n//             transform: xyz.interpolate((x, y, z) => `translate3d(${x}px, ${y}px, ${z}px)`),\n//             // If you want to combine multiple values use the \"interpolate\" helper\n//             border: interpolate([o, color], (o, c) => `${o * 10}px solid ${c}`),\n//             // You can also form ranges, even chain multiple interpolations\n//             padding:\n//                 o.interpolate({ range: [0, 0.5, 1], output: [0, 0, 10] })\n//                     .interpolate(o => `${o}%`),\n//             // Interpolating strings (like up-front) through ranges is allowed ...\n//             borderColor: o.interpolate({ range: [0, 1], output: ['red', '#ffaabb'] }),\n//             // There's also a shortcut for plain, optionless ranges ...\n//             opacity: o.interpolate([0.1, 0.2, 0.6, 1], [1, 0.1, 0.5, 1]),\n//         }}>\n//         {o.interpolate(n => n.toFixed(2)) /* innerText interpolation ... */ }\n//     </animated.div>\n// }\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n\n\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}