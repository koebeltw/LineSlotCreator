{"version":3,"sources":["common/actionTypes.js","actions/index.js","reducers/WSMessageReducer.js","reducers/WSConnetReducer.js","reducers/HomeReducer.js","reducers/SettingReducer.js","reducers/RunDataReducer.js","reducers/PlayOnceDataReducer.js","sagas/websocketSaga.js","reducers/index.js","rootSaga.js","store.js","components/SettingComponent.js","components/RunDataComponent.js","components/PlayOnceComponent.js","components/HomeComponent.js","App.js","serviceWorker.js","index.js"],"names":["actionTypes","WS_CONNECT","WS_MESSAGE","WS_DISCONNECT","HOME_SELECTEDKEY","HOME_SETTINGDATA","HOME_RUNDATA","HOME_PLAYONCEDATA","HOME_FREEGAMECOUNT","WSMessage","Msg","type","SelectedKey","Setting","RunData","PlayOnceData","FreeGameCount","initialState","WSMessageReducer","state","arguments","length","undefined","action","Object","objectSpread","data","Url","WSConnetReducer","HomeReducer","SettingReducer","RunDataReducer","PlayOnceDataReducer","ws","reducer","combineReducers","Message","Disconnet","WSDisconnet","regenerator_default","a","wrap","_context","prev","next","console","log","send","stop","_marked","this","_context2","close","_marked2","CallConnet","WebSocket","onopen","evt","onmessage","obj","JSON","parse","store","dispatch","getState","onclose","err","_context3","takeEvery","t0","_marked3","_context4","_marked4","rootSaga","call","fork","rootSaga_marked","sagaMiddleware","createSagaMiddleware","createStore","reducers","applyMiddleware","run","InputComponet","props","react_default","createElement","input","value","onChange","e","handleChange","target","InputNumberComponet","input_number","min","defaultValue","Value","SwitchComponet","es_switch","checkedChildren","unCheckedChildren","checked","Checked","SettingComponent","s","create","getPrototypeOf","_this","SettingState","getOwnPropertyDescriptors","keyname","stringify","改變設定","SettingDispatch","lists","key","push","Table","striped","bordered","hover","variant","React","Component","connect","bindActionCreators","RunDataComponent","count","setState","handleClick","數據","RunDataState","normalCountList","freeGameCountList","totalMoneyIn","totalMoneyOut","i","data1","json","keys","data2","data3","data4","cc","toString","data5","groups","data6","data7","tooltip","title","style","marginLeft","padding","es_button","onClick","marginTop","react_c3js_default","RunDataDispatch","SvgComponent","wheel","prize","position","scatterPosition","forEach","item","index","array","offsetY","xy","Math","ceil","Size","floor","xmlns","version","width","height","map","fill","indexOf","strokeWidth","stroke","x","y","fillOpacity","strokeOpacity","textX","textY","textAnchor","fontSize","attributeName","dur","from","to","concat","repeatCount","additive","points","PlayOnceComponent","autoPlay","測試","FreeGameCountState","FreeGameCountDispatch","handleAutoPlay","clearInterval","timer","setInterval","PlayOnceDataState","max","disabled","defaultChecked","fontWeight","round","item1","index1","array1","PlayOnceDataDispatch","Content","Layout","Sider","HomeComponent","left","collapsed","show","onCollapse","SelectedKeyDispatch","要求設定","styleThatEnter","scale","styleThatLeft","spring","targetX","clickHandler","layout","minHeight","collapsible","className","menu","theme","defaultSelectedKeys","mode","Item","margin","background","SelectedKeyState","components_SettingComponent","components_RunDataComponent","components_PlayOnceComponent","App","components_HomeComponent","Boolean","window","location","hostname","match","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2e1900ea.chunk.js","sourcesContent":["const actionTypes = {\n    WS_CONNECT: 'WS_CONNECT',\n    WS_MESSAGE: 'WS_MESSAGE',\n    WS_DISCONNECT: 'WS_DISCONNECT',\n    HOME_SELECTEDKEY: 'HOME_SELECTEDKEY',\n    HOME_SETTINGDATA: \"HOME_SETTINGDATA\",\n    HOME_RUNDATA: \"HOME_RUNDATA\",\n    HOME_PLAYONCEDATA: \"HOME_PLAYONCEDATA\",\n    HOME_FREEGAMECOUNT: \"HOME_FREEGAMECOUNT\",\n}\n\nexport {actionTypes}\n","import { actionTypes } from '../common/actionTypes'\n\nexport function WSConnect(value) {\n  return {\n    type: actionTypes.WS_CONNECT,\n      Url: value,\n  }\n}\n\nexport function WSDisconnect() {\n    return {\n        type: actionTypes.WS_DISCONNECT,\n    }\n}\n\nexport function WSMessage(Msg) {\n    return {\n        type: actionTypes.WS_MESSAGE,\n        Msg: Msg,\n    }\n}\n\nexport function SelectedKey(SelectedKey) {\n    return {\n        type: actionTypes.HOME_SELECTEDKEY,\n        SelectedKey: SelectedKey,\n    }\n}\n\nexport function Setting(Setting) {\n    return {\n        type: actionTypes.HOME_SETTINGDATA,\n        Setting: Setting,\n    }\n}\n\nexport function RunData(RunData) {\n    return {\n        type: actionTypes.HOME_RUNDATA,\n        RunData: RunData,\n    }\n}\n\nexport function PlayOnceData(PlayOnceData) {\n    return {\n        type: actionTypes.HOME_PLAYONCEDATA,\n        PlayOnceData: PlayOnceData,\n    }\n}\n\nexport function FreeGameCount(FreeGameCount) {\n    return {\n        type: actionTypes.HOME_FREEGAMECOUNT,\n        FreeGameCount: FreeGameCount,\n    }\n}\n","import {actionTypes} from '../common/actionTypes'\r\n\r\nconst initialState = {\r\n    Msg: \"\"\r\n}\r\n\r\nfunction WSMessageReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case actionTypes.WS_MESSAGE:\r\n            return {...state, Msg: action.data}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default WSMessageReducer\r\n","import {actionTypes} from '../common/actionTypes'\r\n\r\nconst initialState = {\r\n    Url: \"\"\r\n}\r\n\r\nfunction WSConnetReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case actionTypes.WS_CONNECT:\r\n            return {...state, Url: action.Url}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default WSConnetReducer\r\n","import {actionTypes} from '../common/actionTypes'\r\n\r\nconst initialState = {\r\n    SelectedKey: \"\"\r\n}\r\n\r\nfunction HomeReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case actionTypes.HOME_SELECTEDKEY:\r\n            return {...state, SelectedKey: action.SelectedKey}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default HomeReducer\r\n","import {actionTypes} from '../common/actionTypes'\r\n\r\nconst initialState = {\r\n    Setting: {}\r\n}\r\n\r\nfunction SettingReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case actionTypes.HOME_SETTINGDATA:\r\n            return {...state, Setting: action.Setting}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default SettingReducer\r\n","import {actionTypes} from '../common/actionTypes'\r\n\r\nconst initialState = {\r\n    RunData: {}\r\n}\r\n\r\nfunction RunDataReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case actionTypes.HOME_RUNDATA:\r\n            return {...state, RunData: action.RunData}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default RunDataReducer\r\n","import {actionTypes} from '../common/actionTypes'\r\n\r\nconst initialState = {\r\n    FreeGameCount: 0,\r\n    PlayOnceData: {},\r\n}\r\n\r\nfunction PlayOnceDataReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case actionTypes.HOME_FREEGAMECOUNT:\r\n            return {...state, FreeGameCount: action.FreeGameCount}\r\n        case actionTypes.HOME_PLAYONCEDATA:\r\n            return {...state, PlayOnceData: action.PlayOnceData}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default PlayOnceDataReducer\r\n","// import {call} from 'redux-saga/effects'\r\n// import {put} from 'redux-saga/effects'\r\n// import {select} from 'redux-saga/effects'\r\nimport {takeEvery} from 'redux-saga/effects'\r\n// import {delay} from 'redux-saga'\r\n// import { actionTypes } from '../common/actionTypes'\r\nimport { Setting, RunData, PlayOnceData, FreeGameCount} from '../actions'\r\n// import io from 'socket.io-client';\r\nimport store from '../store';\r\n\r\nlet ws\r\n\r\nexport function* Message(action){\r\n    yield console.log('* Message');\r\n    yield ws.send(action.Msg);\r\n}\r\n\r\n// export function* Connet() {\r\n//     yield console.log('* Connet');\r\n//     const newState = yield select(state => state.WSConnetReducer.Url);\r\n//     ws = new WebSocket(newState)\r\n//     ws.onopen = function(evt) {\r\n//         console.log('Connection open ...');\r\n//     };\r\n//\r\n//     ws.onmessage = function(evt) {\r\n//         console.log('Received Message: ' + evt.data);\r\n//         // ws.close();\r\n//\r\n//         // put(Setting(evt.data));\r\n//         // var obj = JSON.parse(evt.data);\r\n//         // console.log(JSON.stringify(evt.data))\r\n//         // console.log(typeof JSON.parse(evt.data));\r\n//         // console.log(typeof Object.values(JSON.parse(evt.data)));\r\n//\r\n//         // console.log(evt.data);\r\n//         // console.log(JSON.parse(evt.data));\r\n//         // console.log(JSON.parse(evt.data)[\"Setting\"]);\r\n//         let obj = JSON.parse(evt.data)[\"設定\"];\r\n//         if (obj !== undefined) {\r\n//             // console.log(Setting(obj));\r\n//             store.dispatch(Setting(obj));\r\n//         }\r\n//\r\n//         // store.dispatch(WSConnect('ws://localhost:3688/test'));\r\n//\r\n//         // put(WSDisconnect());\r\n//         // for(let a in obj) {\r\n//         //     console.log(obj[a]);\r\n//         //     console.log(typeof a);\r\n//         //     console.log(typeof obj[a]);\r\n//         // }\r\n//\r\n//         // obj.map(\r\n//         //     function(i){\r\n//         //         return 0\r\n//         //         // console.log(i);\r\n//         //     });\r\n//         // store.dispatch(Setting(evt.data));\r\n//     };\r\n//\r\n//     ws.onclose = function(evt) {\r\n//         console.log('Connection closed.');\r\n//     };\r\n// }\r\n\r\nexport  function* Disconnet() {\r\n    yield console.log('* Disconnet');\r\n    yield ws.close();\r\n}\r\n\r\nexport function CallConnet() {\r\n    try {\r\n        console.log('CallConnet');\r\n        ws = new WebSocket(\"ws://localhost:3688/test\");\r\n        ws.onopen = function(evt) {\r\n            console.log('Connection open ...');\r\n        };\r\n\r\n        ws.onmessage = function(evt) {\r\n            console.log('Received Message: ' + evt.data);\r\n\r\n            let obj = JSON.parse(evt.data)[\"要求設定\"];\r\n            if (obj !== undefined) {\r\n                // console.log(Setting(obj));\r\n                store.dispatch(Setting(obj));\r\n            }\r\n\r\n            obj = JSON.parse(evt.data)[\"數據\"];\r\n            if (obj !== undefined) {\r\n                console.log(obj);\r\n                store.dispatch(RunData(obj));\r\n            }\r\n\r\n            obj = JSON.parse(evt.data)[\"測試\"];\r\n            if (obj !== undefined) {\r\n                console.log(obj);\r\n                store.dispatch(PlayOnceData(obj));\r\n                if (obj[\"Scatter數量\"] >= 3){\r\n                    store.dispatch(FreeGameCount(store.getState().PlayOnceDataReducer.FreeGameCount + 15));\r\n                }\r\n            }\r\n        }\r\n\r\n        ws.onclose = function(evt) {\r\n            console.log('Connection closed.');\r\n        };\r\n    } catch (err) {\r\n\r\n    }\r\n}\r\n\r\n// export function* WSConnet() {\r\n//     yield console.log('* WSConnet');\r\n//     try {\r\n//         yield takeEvery('WS_CONNECT', Connet);\r\n//\r\n//     } catch (err) {\r\n//\r\n//     }\r\n// }\r\n\r\nexport function* WSDisconnet() {\r\n    yield console.log('* WSDisconnet');\r\n    try {\r\n        yield takeEvery('WS_DISCONNECT', Disconnet);\r\n    } catch (err) {\r\n\r\n    }\r\n}\r\n\r\nexport function* WSMessage() {\r\n    yield console.log('* WSMessage');\r\n    try {\r\n        yield takeEvery('WS_MESSAGE', Message);\r\n    } catch (err) {\r\n\r\n    }\r\n}\r\n\r\n\r\n","import {combineReducers} from 'redux'\r\nimport WSMessageReducer from \"./WSMessageReducer\";\r\nimport WSConnetReducer from \"./WSConnetReducer\";\r\nimport HomeReducer from \"./HomeReducer\";\r\nimport SettingReducer from \"./SettingReducer\";\r\nimport RunDataReducer from \"./RunDataReducer\";\r\nimport PlayOnceDataReducer from \"./PlayOnceDataReducer\";\r\n\r\n\r\nconst reducer = combineReducers({WSMessageReducer, WSConnetReducer, HomeReducer, SettingReducer, RunDataReducer, PlayOnceDataReducer})\r\n\r\nexport default reducer\r\n","import { call, fork } from 'redux-saga/effects'\r\nimport {CallConnet, WSMessage, WSDisconnet} from './sagas/websocketSaga'\r\n\r\nexport default function* rootSaga() {\r\n    // yield fork(WSConnet)\r\n    yield call(CallConnet)\r\n    yield fork(WSDisconnet)\r\n    yield fork(WSMessage)\r\n}\r\n","import {createStore, applyMiddleware} from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport reducers from './reducers'\r\nimport rootSaga from './rootSaga'\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    applyMiddleware(sagaMiddleware)\r\n)\r\n\r\nsagaMiddleware.run(rootSaga)\r\n\r\nexport default store\r\n","import {bindActionCreators} from \"redux\";\r\nimport {Setting, WSMessage} from \"../actions\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport React from \"react\";\r\nimport {Input, InputNumber, Switch} from \"antd\";\r\n// import {Menu} from \"antd/lib/menu\";\r\nimport {Table} from \"react-bootstrap\";\r\nimport store from \"../store\";\r\n// import store from \"../store\";\r\n\r\nfunction InputComponet(props){\r\n    return <div><Input value={props.value} onChange={(e) => (props.handleChange(props, e.target.value))}/></div>\r\n}\r\n\r\nfunction InputNumberComponet(props){\r\n    return <div><InputNumber min={1} defaultValue={props.value} onChange={(Value) => (props.handleChange(props, Value))}/></div>\r\n}\r\n\r\nfunction SwitchComponet(props){\r\n    return <div><Switch checkedChildren=\"開\" unCheckedChildren=\"關\" checked={props.value} onChange={(Checked) => (props.handleChange(props, Checked))}/></div>\r\n}\r\n\r\nclass SettingComponent extends React.Component {\r\n\r\n    handleChange = (props, value) => {\r\n        let s = Object.create(\r\n            Object.getPrototypeOf(this.props.SettingState),\r\n            Object.getOwnPropertyDescriptors(this.props.SettingState)\r\n        );\r\n        s[props.keyname] = value;\r\n        store.dispatch(WSMessage(JSON.stringify({\"改變設定\": s})));\r\n        this.props.SettingDispatch(s)\r\n\r\n        // this.props.Set(this.props.Setting[key])\r\n    }\r\n\r\n    render() {\r\n        let lists = [];\r\n        for (let key in  this.props.SettingState){\r\n            switch (typeof this.props.SettingState[key]) {\r\n                case \"string\":\r\n                    lists.push(<tr key={key}><td>{key}</td><td><InputComponet keyname={key} value={this.props.SettingState[key]} handleChange={this.handleChange}/></td></tr>)\r\n                    break;\r\n                case \"number\":\r\n                    lists.push(<tr key={key}><td>{key}</td><td><InputNumberComponet keyname={key} value={this.props.SettingState[key]} handleChange={this.handleChange}/></td></tr>)\r\n                    break;\r\n                case \"boolean\":\r\n                    lists.push(<tr key={key}><td>{key}</td><td><SwitchComponet keyname={key} value={this.props.SettingState[key]} handleChange={this.handleChange}/></td></tr>)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Table striped bordered hover variant=\"dark\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>選項</th>\r\n                        <th>數值</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {lists}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        SettingState: state.SettingReducer.Setting,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        SettingDispatch: bindActionCreators(Setting, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingComponent)\r\n","import {bindActionCreators} from \"redux\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport React from \"react\";\r\nimport {RunData, WSMessage} from \"../actions\";\r\nimport {Button, InputNumber, Tooltip} from \"antd\";\r\nimport store from \"../store\";\r\nimport C3Chart from 'react-c3js';\r\nimport 'c3/c3.css';\r\n// import c3 from 'c3';\r\n\r\n\r\n// class Chart extends React.Component {\r\n//     componentDidMount() {\r\n//         this._updateChart();\r\n//     }\r\n//     componentDidUpdate() {\r\n//         this._updateChart();\r\n//     }\r\n//     _updateChart() {\r\n//         console.log(\"this.props.data\")\r\n//         console.log(this.props.data)\r\n//         // const chart = c3.generate({\r\n//         //     bindto: '#chart',\r\n//         //     data: this.props.data,\r\n//         // });\r\n//     }\r\n//     render() {\r\n//         return <div id=\"chart\">hi</div>;\r\n//     }\r\n// }\r\n//\r\n// let columns = [\r\n//     ['My Numbers', 30, 200, 100, 400, 150, 250],\r\n//     ['Your Numbers', 50, 20, 10, 40, 15, 25]\r\n// ];\r\n\r\nclass RunDataComponent extends React.Component {\r\n    state = {\r\n        count: 1,\r\n    };\r\n\r\n    handleChange = (props) => {\r\n        this.setState({count: props});\r\n    }\r\n\r\n    handleClick = () => {\r\n        if (this.state.count > 0) {\r\n            store.dispatch(WSMessage(JSON.stringify({\"數據\": this.state.count})));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let lists = [];\r\n        for (let key in this.props.RunDataState){\r\n            lists.push(this.props.RunDataState[key])\r\n        }\r\n\r\n        // let countList = []\r\n        // let oddsList = []\r\n        let normalCountList = []\r\n        let freeGameCountList = []\r\n        // console.log(lists)\r\n        let totalMoneyIn = 0\r\n        let totalMoneyOut = 0\r\n        // let totalWinMoney = 0\r\n        for (let i = 0; i < lists.length; i++) {\r\n            totalMoneyIn = totalMoneyIn + lists[i][\"階段總投入\"]\r\n            totalMoneyOut = totalMoneyOut + lists[i][\"階段總吐出\"]\r\n            // totalWinMoney = totalMoneyOut - totalMoneyIn\r\n        }\r\n\r\n        const data1 =  {\r\n            json: lists,\r\n            keys: {\r\n                value: ['階段回吐率']\r\n            },\r\n            type: 'line',\r\n            // groups: [\r\n            //     ['task_1', 'task_2']\r\n            // ]\r\n        }\r\n\r\n        const data2 =  {\r\n            json: lists,\r\n            keys: {\r\n                value: ['階段總輸贏']\r\n            },\r\n            type: 'line',\r\n            // groups: [\r\n            //     ['task_1', 'task_2']\r\n            // ]\r\n        }\r\n\r\n        const data3 =  {\r\n            json: lists,\r\n            keys: {\r\n                value: ['累積回吐率']\r\n            },\r\n            type: 'line',\r\n            // groups: [\r\n            //     ['task_1', 'task_2']\r\n            // ]\r\n        }\r\n\r\n        const data4 =  {\r\n            json: lists,\r\n            keys: {\r\n                value: ['累積總輸贏']\r\n            },\r\n            type: 'line',\r\n            // groups: [\r\n            //     ['task_1', 'task_2']\r\n            // ]\r\n        }\r\n\r\n        // console.log(normalCountList)\r\n        // console.log(['normal獎項0次數', 'normal獎項10次數', 'normal獎項20次數'])\r\n\r\n        // let newnormalCountList = ['normal獎項0次數', 'normal獎項10次數', 'normal獎項20次數']\r\n        // for (let key of newnormalCountList){\r\n        //     normalCountList.push(key)\r\n        // }\r\n\r\n        // console.log(lists)\r\n        // normalCountList = []\r\n        // normalCountList.push(\"normal獎項0次數\")\r\n        // normalCountList.push('normal獎項10次數')\r\n        // normalCountList.push('normal獎項20次數')\r\n\r\n        let cc = 0\r\n        // let newnormalCountList = []\r\n\r\n        while (cc <= 20){\r\n            normalCountList.push(\"normal獎項\" + cc.toString() +\"次數\")\r\n            freeGameCountList.push(\"freeGame獎項\" + cc.toString() +\"次數\")\r\n            cc++\r\n        }\r\n\r\n        let data5 =  {\r\n            json: lists,\r\n            keys: {\r\n                value: normalCountList\r\n            },\r\n            type: 'bar',\r\n            groups: [\r\n                normalCountList\r\n            ]\r\n        }\r\n\r\n        let data6 =  {\r\n            json: lists,\r\n            keys: {\r\n                value: freeGameCountList\r\n            },\r\n            type: 'bar',\r\n            groups: [\r\n                freeGameCountList\r\n            ]\r\n        }\r\n\r\n        const data7 =  {\r\n            json: lists,\r\n            keys: {\r\n                value: ['normal次數','normal賠率','freeGame次數', 'freeGame賠率']\r\n            },\r\n            type: 'line',\r\n            // groups: [\r\n            //     ['task_1', 'task_2']\r\n            // ]\r\n        }\r\n\r\n        return <div>\r\n            <Tooltip title=\"執行數據次數\">\r\n                <InputNumber style={{\"marginLeft\":30}} min={1} defaultValue={1} onChange={this.handleChange}/>\r\n            </Tooltip>\r\n            <span style={{\"padding\":10}}><Button type=\"primary\" onClick={this.handleClick}>開始</Button></span>\r\n            {/*<Chart data={data1}/>*/}\r\n            <div style={{\"marginTop\":20}}> {((totalMoneyOut / totalMoneyIn  * 100) && \"總回吐率\" + (totalMoneyOut / totalMoneyIn  * 100) + \"%\") || \"\"} </div>\r\n            <div style={{\"marginTop\":20}}><C3Chart data={data1} /></div>\r\n            <div style={{\"marginTop\":20}}><C3Chart data={data2} /></div>\r\n            <div style={{\"marginTop\":20}}><C3Chart data={data3} /></div>\r\n            <div style={{\"marginTop\":20}}><C3Chart data={data4} /></div>\r\n            <div style={{\"marginTop\":20}}><C3Chart data={data5} /></div>\r\n            <div style={{\"marginTop\":20}}><C3Chart data={data6} /></div>\r\n            <div style={{\"marginTop\":20}}><C3Chart data={data7} /></div>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        RunDataState: state.RunDataReducer.RunData,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        RunDataDispatch: bindActionCreators(RunData, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RunDataComponent)\r\n","import React from \"react\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\n// import styleCss from \"../css/style.css\";\r\nimport {Switch, Button, Tooltip, InputNumber} from \"antd\";\r\nimport {PlayOnceData, WSMessage, FreeGameCount} from \"../actions\";\r\nimport store from \"../store\";\r\n\r\nfunction SvgComponent(props) {\r\n    const {wheel, prize} = props\r\n    // if (!wheel) {\r\n    //     return \"\"\r\n    // }\r\n    // console.log(props)\r\n\r\n    const position = []\r\n    let scatterPosition = null\r\n    const Size = 200\r\n    if (prize) {\r\n        // console.log(prize)\r\n        prize.forEach(function (item, index, array) {\r\n            let xy = \"\"\r\n            // let offsetX\r\n            // if (index % 2 === 0) {\r\n            //     offsetX = Math.ceil(index / 2) * 3\r\n            // } else {\r\n            //     offsetX = -Math.ceil(index / 2) * 3\r\n            // }\r\n\r\n            let offsetY\r\n            if (index % 2 === 0) {\r\n                offsetY = Math.ceil(index / 2) * 3\r\n            } else {\r\n                offsetY = -Math.ceil(index / 2) * 3\r\n            }\r\n            if (item[\"圖案編號\"] !== 200) {\r\n                // console.log(item)\r\n                item[\"連線位置\"].forEach(function (item, index, array) {\r\n                    xy = xy + (Size / 2 + (Size + 1) * ((item - 1) % 5)) + \" \" + (Size / 2 + (Size + 1) * (Math.floor((item - 1) / 5)) + offsetY)\r\n\r\n                    if ((array.length - 1) !== index) {\r\n                        xy = xy + \",\"\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                // console.log(item)\r\n                scatterPosition = (item[\"連線位置\"])\r\n            }\r\n\r\n            position.push(xy)\r\n        })\r\n    }\r\n\r\n    // console.log(position)\r\n\r\n    return <div>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width={Size * 5} height={Size * 3}>\r\n            {/*<rect width=\"50\" height=\"50\" x=\"0\" y=\"50\" fill=\"#069\">*/}\r\n                {/*<animateTransform attributeName=\"transform\" dur=\"2s\" type=\"translate\" from=\"0,0\" to=\"-75,-75\" repeatCount=\"indefinite\" additive=\"sum\"/>*/}\r\n                {/*<animateTransform attributeName=\"transform\" dur=\"2s\" type=\"scale\" from=\"1\" to=\"2\" repeatCount=\"indefinite\" additive=\"sum\"/>*/}\r\n\r\n                {/*/!*<animateTransform attributeName=\"transform\" dur=\"2s\" type=\"rotate\" from=\"0,80,80\" to=\"360,80,80\" repeatCount=\"indefinite\" additive=\"sum\"/>*!/*/}\r\n            {/*</rect>*/}\r\n            {/*<rect width=\"50\" height=\"50\" x=\"50\" y=\"50\" fill=\"#069\">*/}\r\n                {/*<animateTransform attributeName=\"transform\" dur=\"2s\" type=\"translate\" from=\"0,0\" to=\"-75,-75\" repeatCount=\"indefinite\" additive=\"sum\"/>*/}\r\n                {/*<animateTransform attributeName=\"transform\" dur=\"2s\" type=\"scale\" from=\"1\" to=\"2\" repeatCount=\"indefinite\" additive=\"sum\"/>*/}\r\n\r\n                {/*/!*<animateTransform attributeName=\"transform\" dur=\"2s\" type=\"rotate\" from=\"0,80,80\" to=\"360,80,80\" repeatCount=\"indefinite\" additive=\"sum\"/>*!/*/}\r\n            {/*</rect>*/}\r\n            {/*<rect width=\"50\" height=\"50\" x=\"100\" y=\"50\" fill=\"#069\">*/}\r\n                {/*<animateTransform attributeName=\"transform\" dur=\"2s\" type=\"translate\" from=\"0,0\" to=\"-125,-75\" repeatCount=\"indefinite\" additive=\"sum\"/>*/}\r\n                {/*<animateTransform attributeName=\"transform\" dur=\"2s\" type=\"scale\" from=\"1\" to=\"2\" repeatCount=\"indefinite\" additive=\"sum\"/>*/}\r\n\r\n                {/*/!*<animateTransform attributeName=\"transform\" dur=\"2s\" type=\"rotate\" from=\"0,80,80\" to=\"360,80,80\" repeatCount=\"indefinite\" additive=\"sum\"/>*!/*/}\r\n            {/*</rect>*/}\r\n            {/*<rect width=\"50\" height=\"50\" x=\"150\" y=\"50\" fill=\"#069\">*/}\r\n                {/*<animateTransform attributeName=\"transform\" dur=\"2s\" type=\"translate\" from=\"0,0\" to=\"-175,-75\" repeatCount=\"indefinite\" additive=\"sum\"/>*/}\r\n                {/*<animateTransform attributeName=\"transform\" dur=\"2s\" type=\"scale\" from=\"1\" to=\"2\" repeatCount=\"indefinite\" additive=\"sum\"/>*/}\r\n\r\n                {/*/!*<animateTransform attributeName=\"transform\" dur=\"2s\" type=\"rotate\" from=\"0,80,80\" to=\"360,80,80\" repeatCount=\"indefinite\" additive=\"sum\"/>*!/*/}\r\n            {/*</rect>*/}\r\n            {/*<rect width=\"50\" height=\"50\" x=\"200\" y=\"50\" fill=\"#069\">*/}\r\n                {/*<animateTransform attributeName=\"transform\" dur=\"2s\" type=\"translate\" from=\"0,0\" to=\"-225,-75\" repeatCount=\"indefinite\" additive=\"sum\"/>*/}\r\n                {/*<animateTransform attributeName=\"transform\" dur=\"2s\" type=\"scale\" from=\"1\" to=\"2\" repeatCount=\"indefinite\" additive=\"sum\"/>*/}\r\n\r\n                {/*/!*<animateTransform attributeName=\"transform\" dur=\"2s\" type=\"rotate\" from=\"0,80,80\" to=\"360,80,80\" repeatCount=\"indefinite\" additive=\"sum\"/>*!/*/}\r\n            {/*</rect>*/}\r\n            {/*<rect width=\"50\" height=\"50\" x=\"300\" y=\"50\" fill=\"#069\">*/}\r\n                {/*<animateTransform attributeName=\"transform\" dur=\"2s\" type=\"translate\" from=\"0,0\" to=\"-275,-75\" repeatCount=\"indefinite\" additive=\"sum\"/>*/}\r\n                {/*<animateTransform attributeName=\"transform\" dur=\"2s\" type=\"scale\" from=\"1\" to=\"2\" repeatCount=\"indefinite\" additive=\"sum\"/>*/}\r\n\r\n                {/*/!*<animateTransform attributeName=\"transform\" dur=\"2s\" type=\"rotate\" from=\"0,80,80\" to=\"360,80,80\" repeatCount=\"indefinite\" additive=\"sum\"/>*!/*/}\r\n            {/*</rect>*/}\r\n            {/*<rect width=\"50\" height=\"50\" x=\"300\" y=\"50\" fill=\"#069\">*/}\r\n                {/*/!*<animateTransform attributeName=\"transform\" dur=\"2s\" type=\"translate\" from=\"0,0\" to=\"-250,-75\" repeatCount=\"indefinite\" additive=\"sum\"/>*!/*/}\r\n                {/*/!*<animateTransform attributeName=\"transform\" dur=\"2s\" type=\"scale\" from=\"1\" to=\"2\" repeatCount=\"indefinite\" additive=\"sum\"/>*!/*/}\r\n\r\n                {/*/!*<animateTransform attributeName=\"transform\" dur=\"2s\" type=\"rotate\" from=\"0,80,80\" to=\"360,80,80\" repeatCount=\"indefinite\" additive=\"sum\"/>*!/*/}\r\n            {/*</rect>*/}\r\n            {wheel && wheel.map(function (item, index, array) {\r\n                return (\r\n                    <rect key={index} width={Size} height={Size}\r\n                          fill={(scatterPosition && scatterPosition.length >= 3 && scatterPosition.indexOf(index + 1) >= 0 ? \"Gold\" : (store.getState().PlayOnceDataReducer.FreeGameCount>0 ? \"rgb(50,50,50)\" : \"rgb(200,200,200)\"))}\r\n                          // fill={\"rgb(200, 200, 200)\"}\r\n                          strokeWidth=\"1\"\r\n                          stroke={\"black\"}\r\n                          x={Size * (index % 5)}\r\n                          y={Size * (Math.floor(index / 5))}\r\n                          fillOpacity=\"0.5\"\r\n                          strokeOpacity=\"0.8\"\r\n                    >\r\n                    </rect>\r\n                )\r\n            })}\r\n            {wheel && wheel.map(function (item, index, array) {\r\n                // if (scatterPosition) {\r\n                //     console.log(index + 1, scatterPosition.indexOf(index + 1), scatterPosition.indexOf(index + 1) >= 0, scatterPosition)\r\n                // }\r\n\r\n                let textX = Size / 2 + Size * (index % 5)\r\n                let textY = Size / 1.6 + Size * (Math.floor(index / 5))\r\n                return (\r\n                    <text key={index} textAnchor=\"middle\"\r\n                          x={textX}\r\n                          y={textY}\r\n                          fontSize=\"50pt\"\r\n                          fillOpacity=\"0.5\"\r\n                          // strokeOpacity=\"0.8\"\r\n                          stroke={\"black\"}\r\n                          // stroke={scatterPosition && scatterPosition.length >= 3 && scatterPosition.indexOf(index + 1) >= 0 ? \"rgb(0,0,0)\" : \"rgb(0,255,0)\"}\r\n                          // strokeWidth={scatterPosition && scatterPosition.length >= 3 && scatterPosition.indexOf(index + 1) >= 0 ? 1 : 10}\r\n                          strokeWidth={2}\r\n                          fill={scatterPosition && scatterPosition.indexOf(index + 1) >= 0 ? \"blue\" : \"red\"}\r\n                    >\r\n                        {item}\r\n                        {\r\n                            (scatterPosition && scatterPosition.length > 0 && scatterPosition.indexOf(index + 1) >= 0 ?\r\n                                <animateTransform attributeName=\"transform\" dur=\"1.5s\" type=\"translate\" from=\"0,0\"\r\n                                                  to={`${-textX},${-textY + Size / 10}`} repeatCount=\"indefinite\"\r\n                                                  additive=\"sum\"/> : \"\")\r\n                        }\r\n                        {\r\n                            (scatterPosition && scatterPosition.length > 0 && scatterPosition.indexOf(index + 1) >= 0 ?\r\n                                <animateTransform attributeName=\"transform\" dur=\"1.5s\" type=\"scale\" from=\"1\" to=\"2\"\r\n                                                  repeatCount=\"indefinite\" additive=\"sum\"/> : \"\")\r\n                        }\r\n                    </text>\r\n                )\r\n            })}\r\n            {position && position.map(function (item, index, array) {\r\n                    // console.log(index)\r\n                    let stroke\r\n                    if (index % 2 === 0) {\r\n                        stroke = `rgb(${255 - (index % 3 * 120)}, ${(index % 21) * 12.2}, ${255 - (index % 6) * 51})`\r\n                    } else {\r\n                        stroke = `rgb(${index % 3 * 120}, ${255 - ((index % 21) * 12.2)}, ${(index % 6) * 51})`\r\n                    }\r\n\r\n                    // console.log(stroke)\r\n                    return <polyline key={index} points={item} fill=\"none\" stroke={stroke} strokeWidth=\"2\"/>\r\n                }\r\n            )\r\n\r\n            }\r\n            {/*<polyline points=\"100 100,300 300, 500 500, \" fill=\"none\" stroke=\"black\" strokeWidth=\"2\"/>*/}\r\n            {/*<polyline points=\"104 100,304 300, 504 500\" fill=\"none\" stroke=\"black\" strokeWidth=\"2\"/>*/}\r\n        </svg>\r\n    </div>\r\n}\r\n\r\nclass PlayOnceComponent extends React.Component {\r\n    state = {\r\n        autoPlay: false,\r\n    }\r\n\r\n    handleClick = () => {\r\n        store.dispatch(WSMessage(JSON.stringify({\"測試\": this.props.FreeGameCountState})));\r\n\r\n        if (this.props.FreeGameCountState > 0) {\r\n            this.props.FreeGameCountDispatch(this.props.FreeGameCountState - 1)\r\n        }\r\n    }\r\n\r\n    handleChange = (value) => {\r\n        // console.log(value)\r\n        this.props.FreeGameCountDispatch(value)\r\n    }\r\n\r\n    handleAutoPlay = (value) => {\r\n        console.log(this.state.autoPlay, value)\r\n        if (this.state.autoPlay === true) {\r\n            clearInterval(this.timer);\r\n            console.log(\"clearInterval(this.handleClick);\")\r\n        }else{\r\n            this.timer = setInterval(() => this.handleClick(), 2000);\r\n            console.log(\"this.timer = setInterval(() => this.handleClick(), 2000);\");\r\n        }\r\n\r\n        this.setState({\r\n            autoPlay: !this.state.autoPlay\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        //this.timer = setInterval(this.tick.bind(this), 50); //或\r\n        // this.timer = setInterval(() => this.handleClick(), 2000);\r\n    }\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        console.log(\"PlayOnceComponent Render\", this.props.PlayOnceDataState)\r\n        return <div>\r\n            <div>\r\n                <div>\r\n                    <Tooltip title=\"剩餘FreeGame次數\">\r\n                        <InputNumber min={0} max={99999} value={this.props.FreeGameCountState}\r\n                                     onChange={this.handleChange} disabled={this.state.autoPlay}/>\r\n                    </Tooltip>\r\n                    <span style={{\"padding\": 10}}><Button type=\"primary\" onClick={this.handleClick} disabled={this.state.autoPlay}>開始</Button></span>\r\n                    <span><Switch checkedChildren=\"Auto-On\" unCheckedChildren=\"Auto-Off\" defaultChecked={this.state.autoPlay} onChange={this.handleAutoPlay}/></span>\r\n                </div>\r\n\r\n                <div style={{\"marginTop\": 20}}><SvgComponent prize={this.props.PlayOnceDataState[\"獎項\"]}\r\n                                                             wheel={this.props.PlayOnceDataState[\"滾輪\"]}/></div>\r\n\r\n                <div style={{fontSize: \"large\", fontWeight: \"bold\", \"marginTop\": 25}}>\r\n                    <span>{Math.round(this.props.PlayOnceDataState[\"總賠率\"]*100)/100 > 0 && \"總賠率:\" + Math.round(this.props.PlayOnceDataState[\"總賠率\"]*100)/100}</span>\r\n                    <span>{this.props.PlayOnceDataState[\"Scatter數量\"] > 0 && \"  Scatter數量:\" + this.props.PlayOnceDataState[\"Scatter數量\"]}</span>\r\n                    {\r\n                        this.props.PlayOnceDataState[\"獎項\"] &&\r\n                        this.props.PlayOnceDataState[\"獎項\"].map(function (item, index, array) {\r\n                                // console.log(item)\r\n                                return <div key={index}>\r\n                                    {Object.keys(item).map(function (item1, index1, array1) {\r\n                                        return <span key={index1}>{item1 + \":【\" + item[item1] + \"】 \"}</span>\r\n                                    })}\r\n                                </div>\r\n                            }\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        FreeGameCountState: state.PlayOnceDataReducer.FreeGameCount,\r\n        PlayOnceDataState: state.PlayOnceDataReducer.PlayOnceData,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        FreeGameCountDispatch: bindActionCreators(FreeGameCount, dispatch),\r\n        PlayOnceDataDispatch: bindActionCreators(PlayOnceData, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayOnceComponent)\r\n","// import { Table } from 'react-bootstrap';\r\n// import { ButtonToolbar } from 'react-bootstrap';\r\n// import { Alert } from 'react-bootstrap';\r\nimport React from \"react\";\r\n// import {Button} from 'reactstrap';\r\n// import 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n// import { bindActionCreators } from 'redux'\r\nimport {connect} from 'react-redux'\r\nimport 'antd/dist/antd.css';\r\nimport {bindActionCreators} from \"redux\";\r\nimport {SelectedKey, WSMessage} from \"../actions\";\r\nimport {/*Table as Table2,*/ Layout, Menu, /*Icon*/} from 'antd';\r\nimport SettingComponet from './SettingComponent';\r\nimport RunDataComponent from './RunDataComponent';\r\nimport PlayOnceComponet from './PlayOnceComponent';\r\nimport store from '../store';\r\nimport {/*Motion,*/ spring, /*TransitionMotion*/} from 'react-motion';\r\n// import Demo from './Demo';\r\n\r\nconst {Content, Sider} = Layout;\r\n\r\n\r\nclass HomeComponent extends React.Component {\r\n\r\n    state = {\r\n        left: 0,\r\n        collapsed: false,\r\n        show: false,\r\n    }\r\n\r\n    willEnter(styleThatEnter) {\r\n        return { scale: 0 }\r\n    }\r\n\r\n    willLeave(styleThatLeft) {\r\n        return { scale: spring(0) }\r\n    }\r\n\r\n    clickHandler() {\r\n        let targetX = 0\r\n        if(this.state.left === 0) {\r\n            targetX = 200\r\n        } else {\r\n            targetX = 0\r\n        }\r\n\r\n        this.setState({\r\n            left: targetX\r\n        })\r\n\r\n        this.setState({\r\n            show: !this.state.show\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.clickHandler()\r\n        this.props.SelectedKeyDispatch(\"數據\")\r\n    }\r\n\r\n    componentWillMount() {\r\n    }\r\n\r\n    onCollapse = (collapsed) => {\r\n        // console.log(collapsed);\r\n        this.setState({collapsed});\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        // console.log('click ', e);\r\n        // console.log(SelectedKey(e.key));\r\n        // store.dispatch(SelectMenu('click'))\r\n        this.props.SelectedKeyDispatch(e.key)\r\n        if (e.key === '設定') {\r\n            // store.dispatch(WSMessage(\"要求設定\"))\r\n            store.dispatch(WSMessage(JSON.stringify({\"要求設定\": ''})));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout style={{minHeight: '100vh'}}>\r\n                <Sider\r\n                    collapsible\r\n                    collapsed={this.state.collapsed}\r\n                    onCollapse={this.onCollapse}\r\n                >\r\n                    <div className=\"logo\"/>\r\n                    <Menu className=\"HomeMenu\" theme=\"dark\" defaultSelectedKeys={['數據']} mode=\"inline\"\r\n                          onClick={this.handleClick}>\r\n                        <Menu.Item key=\"首頁\">\r\n                            {/*<Icon type=\"home\" />*/}\r\n                            {/*<Icon component={PandaSvg} />*/}\r\n                            <span>首頁</span>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"數據\">\r\n                            {/*<img src=\"https://zos.alipayobjects.com/rmsportal/DgGuKTJUjLNOsvluZEbY.png\" alt=\"https://zos.alipayobjects.com/rmsportal/DgGuKTJUjLNOsvluZEbY.png\" width=\"47px\" height=\"47px\"/>*/}\r\n                            {/*<Icon type=\"home\" />*/}\r\n                            <span>數據</span>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"測試\">\r\n                            {/*<Icon type=\"setting\" />*/}\r\n                            <span>測試</span>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"設定\">\r\n                            {/*<Icon type=\"setting\" />*/}\r\n                            <span>設定</span>\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                </Sider>\r\n                <Layout>\r\n                    {/*<Header style={{ background: '#fff', padding: 0 }} />*/}\r\n                    <Content style={{margin: '24px 24px 24px 24px', padding: 12}}>\r\n                        <div style={{padding: 24, background: '#fff', minHeight: 720}}>\r\n                            <div>\r\n\r\n                            </div>\r\n                            {/*<Demo/>*/}\r\n                            {(this.props.SelectedKeyState === \"設定\") && <div><SettingComponet/></div>}\r\n                            {(this.props.SelectedKeyState === \"數據\") && <div><RunDataComponent/></div>}\r\n                            {(this.props.SelectedKeyState === \"測試\") && <div><PlayOnceComponet/></div>}\r\n                        </div>\r\n\r\n                    </Content>\r\n                    {/*<Footer style={{ textAlign: 'center' }}>*/}\r\n\r\n                    {/*</Footer>*/}\r\n                </Layout>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        SelectedKeyState: state.HomeReducer.SelectedKey,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        SelectedKeyDispatch: bindActionCreators(SelectedKey, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeComponent)\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport HomeComponet from './components/HomeComponent';\n// import Demo from './components/Demo';\n\nclass App extends Component {\n  render() {\n    return (\n        <div>\n            {/*<Demo/>*/}\n            {/*<Stage options={{ backgroundColor: 0x1099bb }}>*/}\n                {/*<BasicText />*/}\n                {/*<RichText />*/}\n                {/*<TweenComponent/>*/}\n            {/*</Stage>*/}\n\n            <HomeComponet />\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport { Provider } from 'react-redux';\n// import {Button} from \"react-bootstrap\";\n// import Steps, { Step } from 'rc-steps';\n// import ConnectElements from 'react-connect-elements';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        {/*<div>*/}\n            {/*<div>*/}\n                {/*<div className=\"elements\">*/}\n                    {/*<div className=\"element element1\" />*/}\n                    {/*<div className=\"element element2\" />*/}\n                {/*</div>*/}\n                {/*<ConnectElements*/}\n                    {/*selector=\".elements\"*/}\n                    {/*elements={[{ from: '.element1', to: '.element2' }]}*/}\n                {/*/>*/}\n            {/*</div>*/}\n        {/*</div>*/}\n        <App />\n        {/*<WS>*/}\n        {/*</WS>*/}\n    </Provider>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}